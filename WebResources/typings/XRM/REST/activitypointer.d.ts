declare namespace Rest {
  interface ActivityPointerBase extends RestEntity {
    ActivityAdditionalParams?: string | null;
    ActivityId?: string | null;
    ActivityTypeCode?: string | null;
    ActualDurationMinutes?: number | null;
    ActualEnd?: Date | null;
    ActualStart?: Date | null;
    Community?: SDK.OptionSet<socialprofile_community> | null;
    CreatedBy?: SDK.EntityReference | null;
    CreatedOn?: Date | null;
    CreatedOnBehalfBy?: SDK.EntityReference | null;
    DeliveryLastAttemptedOn?: Date | null;
    DeliveryPriorityCode?: SDK.OptionSet<activitypointer_deliveryprioritycode> | null;
    Description?: string | null;
    ExchangeItemId?: string | null;
    ExchangeRate?: string | null;
    ExchangeWebLink?: string | null;
    InstanceTypeCode?: SDK.OptionSet<activitypointer_instancetypecode> | null;
    IsBilled?: boolean | null;
    IsMapiPrivate?: boolean | null;
    IsRegularActivity?: boolean | null;
    IsWorkflowCreated?: boolean | null;
    LastOnHoldTime?: Date | null;
    LeftVoiceMail?: boolean | null;
    ModifiedBy?: SDK.EntityReference | null;
    ModifiedOn?: Date | null;
    ModifiedOnBehalfBy?: SDK.EntityReference | null;
    OnHoldTime?: number | null;
    OwnerId?: SDK.EntityReference | null;
    OwningBusinessUnit?: SDK.EntityReference | null;
    OwningTeam?: SDK.EntityReference | null;
    OwningUser?: SDK.EntityReference | null;
    PostponeActivityProcessingUntil?: Date | null;
    PriorityCode?: SDK.OptionSet<activitypointer_prioritycode> | null;
    ProcessId?: string | null;
    RegardingObjectId?: SDK.EntityReference | null;
    SLAId?: SDK.EntityReference | null;
    SLAInvokedId?: SDK.EntityReference | null;
    ScheduledDurationMinutes?: number | null;
    ScheduledEnd?: Date | null;
    ScheduledStart?: Date | null;
    SenderMailboxId?: SDK.EntityReference | null;
    SentOn?: Date | null;
    SeriesId?: string | null;
    SortDate?: Date | null;
    StageId?: string | null;
    StateCode?: SDK.OptionSet<activitypointer_statecode> | null;
    StatusCode?: SDK.OptionSet<activitypointer_statuscode> | null;
    Subject?: string | null;
    TimeZoneRuleVersionNumber?: number | null;
    TransactionCurrencyId?: SDK.EntityReference | null;
    TraversedPath?: string | null;
    UTCConversionTimeZoneCode?: number | null;
    VersionNumber?: number | null;
    allparties?: SDK.EntityReference | null;
  }
  interface ActivityPointer extends ActivityPointerBase {
    Account_ActivityPointers?: Account | null;
    Contact_ActivityPointers?: Contact | null;
    activity_pointer_email?: Email[] | null;
    activitypointer_activity_parties?: ActivityParty[] | null;
    activitypointer_connections1?: Connection[] | null;
    activitypointer_connections2?: Connection[] | null;
    lk_activitypointer_createdby?: SystemUser | null;
    lk_activitypointer_createdonbehalfby?: SystemUser | null;
    lk_activitypointer_modifiedby?: SystemUser | null;
    lk_activitypointer_modifiedonbehalfby?: SystemUser | null;
    owner_activitypointers?: SystemUser | null;
    user_activity?: SystemUser | null;
  }
  interface ActivityPointerResult extends ActivityPointerBase {
    Account_ActivityPointers?: Account | null;
    Contact_ActivityPointers?: Contact | null;
    activity_pointer_email?: SDK.Results<EmailResult> | null;
    activitypointer_activity_parties?: SDK.Results<ActivityPartyResult> | null;
    activitypointer_connections1?: SDK.Results<ConnectionResult> | null;
    activitypointer_connections2?: SDK.Results<ConnectionResult> | null;
    lk_activitypointer_createdby?: SystemUser | null;
    lk_activitypointer_createdonbehalfby?: SystemUser | null;
    lk_activitypointer_modifiedby?: SystemUser | null;
    lk_activitypointer_modifiedonbehalfby?: SystemUser | null;
    owner_activitypointers?: SystemUser | null;
    user_activity?: SystemUser | null;
  }
  interface ActivityPointer_Select extends ActivityPointer_Expand {
    ActivityAdditionalParams: RestAttribute<ActivityPointer_Select>;
    ActivityId: RestAttribute<ActivityPointer_Select>;
    ActivityTypeCode: RestAttribute<ActivityPointer_Select>;
    ActualDurationMinutes: RestAttribute<ActivityPointer_Select>;
    ActualEnd: RestAttribute<ActivityPointer_Select>;
    ActualStart: RestAttribute<ActivityPointer_Select>;
    Community: RestAttribute<ActivityPointer_Select>;
    CreatedBy: RestAttribute<ActivityPointer_Select>;
    CreatedOn: RestAttribute<ActivityPointer_Select>;
    CreatedOnBehalfBy: RestAttribute<ActivityPointer_Select>;
    DeliveryLastAttemptedOn: RestAttribute<ActivityPointer_Select>;
    DeliveryPriorityCode: RestAttribute<ActivityPointer_Select>;
    Description: RestAttribute<ActivityPointer_Select>;
    ExchangeItemId: RestAttribute<ActivityPointer_Select>;
    ExchangeRate: RestAttribute<ActivityPointer_Select>;
    ExchangeWebLink: RestAttribute<ActivityPointer_Select>;
    InstanceTypeCode: RestAttribute<ActivityPointer_Select>;
    IsBilled: RestAttribute<ActivityPointer_Select>;
    IsMapiPrivate: RestAttribute<ActivityPointer_Select>;
    IsRegularActivity: RestAttribute<ActivityPointer_Select>;
    IsWorkflowCreated: RestAttribute<ActivityPointer_Select>;
    LastOnHoldTime: RestAttribute<ActivityPointer_Select>;
    LeftVoiceMail: RestAttribute<ActivityPointer_Select>;
    ModifiedBy: RestAttribute<ActivityPointer_Select>;
    ModifiedOn: RestAttribute<ActivityPointer_Select>;
    ModifiedOnBehalfBy: RestAttribute<ActivityPointer_Select>;
    OnHoldTime: RestAttribute<ActivityPointer_Select>;
    OwnerId: RestAttribute<ActivityPointer_Select>;
    OwningBusinessUnit: RestAttribute<ActivityPointer_Select>;
    OwningTeam: RestAttribute<ActivityPointer_Select>;
    OwningUser: RestAttribute<ActivityPointer_Select>;
    PostponeActivityProcessingUntil: RestAttribute<ActivityPointer_Select>;
    PriorityCode: RestAttribute<ActivityPointer_Select>;
    ProcessId: RestAttribute<ActivityPointer_Select>;
    RegardingObjectId: RestAttribute<ActivityPointer_Select>;
    SLAId: RestAttribute<ActivityPointer_Select>;
    SLAInvokedId: RestAttribute<ActivityPointer_Select>;
    ScheduledDurationMinutes: RestAttribute<ActivityPointer_Select>;
    ScheduledEnd: RestAttribute<ActivityPointer_Select>;
    ScheduledStart: RestAttribute<ActivityPointer_Select>;
    SenderMailboxId: RestAttribute<ActivityPointer_Select>;
    SentOn: RestAttribute<ActivityPointer_Select>;
    SeriesId: RestAttribute<ActivityPointer_Select>;
    SortDate: RestAttribute<ActivityPointer_Select>;
    StageId: RestAttribute<ActivityPointer_Select>;
    StateCode: RestAttribute<ActivityPointer_Select>;
    StatusCode: RestAttribute<ActivityPointer_Select>;
    Subject: RestAttribute<ActivityPointer_Select>;
    TimeZoneRuleVersionNumber: RestAttribute<ActivityPointer_Select>;
    TransactionCurrencyId: RestAttribute<ActivityPointer_Select>;
    TraversedPath: RestAttribute<ActivityPointer_Select>;
    UTCConversionTimeZoneCode: RestAttribute<ActivityPointer_Select>;
    VersionNumber: RestAttribute<ActivityPointer_Select>;
    allparties: RestAttribute<ActivityPointer_Select>;
  }
  interface ActivityPointer_Filter {
    ActivityAdditionalParams: string;
    ActivityId: XQR.Guid;
    ActivityTypeCode: string;
    ActualDurationMinutes: number;
    ActualEnd: Date;
    ActualStart: Date;
    Community: XQR.ValueContainerFilter<socialprofile_community>;
    CreatedBy: XQR.EntityReferenceFilter;
    CreatedOn: Date;
    CreatedOnBehalfBy: XQR.EntityReferenceFilter;
    DeliveryLastAttemptedOn: Date;
    DeliveryPriorityCode: XQR.ValueContainerFilter<activitypointer_deliveryprioritycode>;
    Description: string;
    ExchangeItemId: string;
    ExchangeRate: any;
    ExchangeWebLink: string;
    InstanceTypeCode: XQR.ValueContainerFilter<activitypointer_instancetypecode>;
    IsBilled: boolean;
    IsMapiPrivate: boolean;
    IsRegularActivity: boolean;
    IsWorkflowCreated: boolean;
    LastOnHoldTime: Date;
    LeftVoiceMail: boolean;
    ModifiedBy: XQR.EntityReferenceFilter;
    ModifiedOn: Date;
    ModifiedOnBehalfBy: XQR.EntityReferenceFilter;
    OnHoldTime: number;
    OwnerId: XQR.EntityReferenceFilter;
    OwningBusinessUnit: XQR.EntityReferenceFilter;
    OwningTeam: XQR.EntityReferenceFilter;
    OwningUser: XQR.EntityReferenceFilter;
    PostponeActivityProcessingUntil: Date;
    PriorityCode: XQR.ValueContainerFilter<activitypointer_prioritycode>;
    ProcessId: XQR.Guid;
    RegardingObjectId: XQR.EntityReferenceFilter;
    SLAId: XQR.EntityReferenceFilter;
    SLAInvokedId: XQR.EntityReferenceFilter;
    ScheduledDurationMinutes: number;
    ScheduledEnd: Date;
    ScheduledStart: Date;
    SenderMailboxId: XQR.EntityReferenceFilter;
    SentOn: Date;
    SeriesId: XQR.Guid;
    SortDate: Date;
    StageId: XQR.Guid;
    StateCode: XQR.ValueContainerFilter<activitypointer_statecode>;
    StatusCode: XQR.ValueContainerFilter<activitypointer_statuscode>;
    Subject: string;
    TimeZoneRuleVersionNumber: number;
    TransactionCurrencyId: XQR.EntityReferenceFilter;
    TraversedPath: string;
    UTCConversionTimeZoneCode: number;
    VersionNumber: number;
    allparties: XQR.EntityReferenceFilter;
  }
  interface ActivityPointer_Expand {
    Account_ActivityPointers: RestExpand<ActivityPointer_Select, Account_Select>;
    Contact_ActivityPointers: RestExpand<ActivityPointer_Select, Contact_Select>;
    activity_pointer_email: RestExpand<ActivityPointer_Select, Email_Select>;
    activitypointer_activity_parties: RestExpand<ActivityPointer_Select, ActivityParty_Select>;
    activitypointer_connections1: RestExpand<ActivityPointer_Select, Connection_Select>;
    activitypointer_connections2: RestExpand<ActivityPointer_Select, Connection_Select>;
    lk_activitypointer_createdby: RestExpand<ActivityPointer_Select, SystemUser_Select>;
    lk_activitypointer_createdonbehalfby: RestExpand<ActivityPointer_Select, SystemUser_Select>;
    lk_activitypointer_modifiedby: RestExpand<ActivityPointer_Select, SystemUser_Select>;
    lk_activitypointer_modifiedonbehalfby: RestExpand<ActivityPointer_Select, SystemUser_Select>;
    owner_activitypointers: RestExpand<ActivityPointer_Select, SystemUser_Select>;
    user_activity: RestExpand<ActivityPointer_Select, SystemUser_Select>;
  }
}
interface RestEntities {
  ActivityPointer: RestMapping<Rest.ActivityPointer,Rest.ActivityPointer_Select,Rest.ActivityPointer_Expand,Rest.ActivityPointer_Filter,Rest.ActivityPointerResult>;
}
