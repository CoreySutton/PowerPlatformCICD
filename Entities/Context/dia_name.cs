//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace Entities {
    
    
    /// <summary>
    /// <para>Display Name: Name</para>
    /// </summary>
    [EntityLogicalName("dia_name")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dia_name : ExtendedEntity<dia_nameState, dia_name_statuscode> {
        
        public const string EntityLogicalName = "dia_name";
        
        public const int EntityTypeCode = 10350;
        
        public dia_name() : 
                base(EntityLogicalName) {
        }
        
        public dia_name(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dia_name");
            }
        }
        
        [AttributeLogicalName("dia_nameid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dia_nameid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dia_nameid")]
        public Guid? dia_nameId {
            get {
                return GetAttributeValue<Guid?>("dia_nameid");
            }
            set {
                SetId("dia_nameid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name type</para>
        /// </summary>
        [AttributeLogicalName("dia_nametypeid")]
        public EntityReference dia_Nametypeid {
            get {
                return GetAttributeValue<EntityReference>("dia_nametypeid");
            }
            set {
                SetAttributeValue("dia_nametypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Year last used</para>
        /// </summary>
        [AttributeLogicalName("dia_yearlastused")]
        public string dia_Yearlastused {
            get {
                return GetAttributeValue<string>("dia_yearlastused");
            }
            set {
                SetAttributeValue("dia_yearlastused", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: CBG application</para>
        /// </summary>
        [AttributeLogicalName("dia_cbgapplicationid")]
        public EntityReference dia_cbgapplicationid {
            get {
                return GetAttributeValue<EntityReference>("dia_cbgapplicationid");
            }
            set {
                SetAttributeValue("dia_cbgapplicationid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End date</para>
        /// </summary>
        [AttributeLogicalName("dia_enddate")]
        public DateTime? dia_enddate {
            get {
                return GetAttributeValue<DateTime?>("dia_enddate");
            }
            set {
                SetAttributeValue("dia_enddate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Family name</para>
        /// </summary>
        [AttributeLogicalName("dia_familyname")]
        public string dia_familyname {
            get {
                return GetAttributeValue<string>("dia_familyname");
            }
            set {
                SetAttributeValue("dia_familyname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Given name(s)</para>
        /// </summary>
        [AttributeLogicalName("dia_givennames")]
        public string dia_givennames {
            get {
                return GetAttributeValue<string>("dia_givennames");
            }
            set {
                SetAttributeValue("dia_givennames", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ID</para>
        /// </summary>
        [AttributeLogicalName("dia_id")]
        public string dia_id {
            get {
                return GetAttributeValue<string>("dia_id");
            }
            set {
                SetAttributeValue("dia_id", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dia_name")]
        public string dia_name_1 {
            get {
                return GetAttributeValue<string>("dia_name");
            }
            set {
                SetAttributeValue("dia_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Person</para>
        /// </summary>
        [AttributeLogicalName("dia_person")]
        public EntityReference dia_person {
            get {
                return GetAttributeValue<EntityReference>("dia_person");
            }
            set {
                SetAttributeValue("dia_person", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Preferred name</para>
        /// </summary>
        [AttributeLogicalName("dia_preferredname")]
        public bool? dia_preferredname {
            get {
                return GetAttributeValue<bool?>("dia_preferredname");
            }
            set {
                SetAttributeValue("dia_preferredname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start date</para>
        /// </summary>
        [AttributeLogicalName("dia_startdate")]
        public DateTime? dia_startdate {
            get {
                return GetAttributeValue<DateTime?>("dia_startdate");
            }
            set {
                SetAttributeValue("dia_startdate", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Name</para>
        /// <para>Display Name: State</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dia_nameState? statecode {
            get {
                return GetOptionSetValue<dia_nameState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Name</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dia_name_statuscode? statuscode {
            get {
                return GetOptionSetValue<dia_name_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("dia_cbgapplicationid")]
        [RelationshipSchemaName("dia_cbgapplication_name_cbgapplicationid")]
        public dia_cbgapplication dia_cbgapplication_name_cbgapplicationid {
            get {
                return GetRelatedEntity<dia_cbgapplication>("dia_cbgapplication_name_cbgapplicationid", null);
            }
            set {
                SetRelatedEntity("dia_cbgapplication_name_cbgapplicationid", null, value);
            }
        }
        
        [AttributeLogicalName("dia_person")]
        [RelationshipSchemaName("dia_contact_name_personid")]
        public Contact dia_contact_name_personid {
            get {
                return GetRelatedEntity<Contact>("dia_contact_name_personid", null);
            }
            set {
                SetRelatedEntity("dia_contact_name_personid", null, value);
            }
        }
        
        [AttributeLogicalName("dia_nametypeid")]
        [RelationshipSchemaName("dia_nametype_dia_name_Nametypeid")]
        public dia_nametype dia_nametype_dia_name_Nametypeid {
            get {
                return GetRelatedEntity<dia_nametype>("dia_nametype_dia_name_Nametypeid", null);
            }
            set {
                SetRelatedEntity("dia_nametype_dia_name_Nametypeid", null, value);
            }
        }
        
        public static dia_name Retrieve(IOrganizationService service, Guid id, params Expression<Func<dia_name,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'ID_CBG Application ID'</para>
        /// </summary>
        public static dia_name Retrieve_dia_id_cbgapplicationid(IOrganizationService service, string dia_id, EntityReference dia_cbgapplicationid, params Expression<Func<dia_name,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("dia_id", dia_id);
            keys.Add("dia_cbgapplicationid", dia_cbgapplicationid);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'ID_CBG Application ID'</para>
        /// </summary>
        public void AltKey_dia_id_cbgapplicationid(string dia_id, EntityReference dia_cbgapplicationid) {
            KeyAttributes.Clear();
            KeyAttributes.Add("dia_id", dia_id);
            KeyAttributes.Add("dia_cbgapplicationid", dia_cbgapplicationid);
        }
    }
    
    [DataContract()]
    public enum dia_nameState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dia_name_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
        
        [EnumMember()]
        Superseded = 100000000,
    }
}
