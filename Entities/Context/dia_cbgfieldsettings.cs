//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace Entities {
    
    
    /// <summary>
    /// <para>Display Name: CBG field & section settings</para>
    /// </summary>
    [EntityLogicalName("dia_cbgfieldsettings")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dia_cbgfieldsettings : ExtendedEntity<dia_cbgfieldsettingsState, dia_cbgfieldsettings_statuscode> {
        
        public const string EntityLogicalName = "dia_cbgfieldsettings";
        
        public const int EntityTypeCode = 10378;
        
        public dia_cbgfieldsettings() : 
                base(EntityLogicalName) {
        }
        
        public dia_cbgfieldsettings(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dia_name");
            }
        }
        
        [AttributeLogicalName("dia_cbgfieldsettingsid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dia_cbgfieldsettingsid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: CBG Field Settings</para>
        /// </summary>
        [AttributeLogicalName("dia_cbgfieldsettingsid")]
        public Guid? dia_cbgfieldsettingsId {
            get {
                return GetAttributeValue<Guid?>("dia_cbgfieldsettingsid");
            }
            set {
                SetId("dia_cbgfieldsettingsid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Entity Form</para>
        /// </summary>
        [AttributeLogicalName("dia_entityform")]
        public EntityReference dia_EntityForm {
            get {
                return GetAttributeValue<EntityReference>("dia_entityform");
            }
            set {
                SetAttributeValue("dia_entityform", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Help Text</para>
        /// </summary>
        [AttributeLogicalName("dia_helptext")]
        public string dia_Helptext {
            get {
                return GetAttributeValue<string>("dia_helptext");
            }
            set {
                SetAttributeValue("dia_helptext", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Label Info</para>
        /// </summary>
        [AttributeLogicalName("dia_labelinfo")]
        public string dia_LabelInfo {
            get {
                return GetAttributeValue<string>("dia_labelinfo");
            }
            set {
                SetAttributeValue("dia_labelinfo", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Placeholder Text</para>
        /// </summary>
        [AttributeLogicalName("dia_placeholdertext")]
        public string dia_PlaceholderText {
            get {
                return GetAttributeValue<string>("dia_placeholdertext");
            }
            set {
                SetAttributeValue("dia_placeholdertext", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Web Page</para>
        /// </summary>
        [AttributeLogicalName("dia_webpage")]
        public EntityReference dia_WebPage {
            get {
                return GetAttributeValue<EntityReference>("dia_webpage");
            }
            set {
                SetAttributeValue("dia_webpage", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the field.</para>
        /// <para>Display Name: Field</para>
        /// </summary>
        [AttributeLogicalName("dia_name")]
        public string dia_name {
            get {
                return GetAttributeValue<string>("dia_name");
            }
            set {
                SetAttributeValue("dia_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Data Value Condition Type</para>
        /// </summary>
        [AttributeLogicalName("diap_datavalueconditiontype")]
        public dia_cbgfieldsettings_diap_DataValueConditionType? diap_DataValueConditionType {
            get {
                return GetOptionSetValue<dia_cbgfieldsettings_diap_DataValueConditionType>("diap_datavalueconditiontype");
            }
            set {
                SetOptionSetValue("diap_datavalueconditiontype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Data Value Message Type</para>
        /// </summary>
        [AttributeLogicalName("diap_datavaluemessagetype")]
        public dia_cbgfieldsettings_diap_DataValueMessageType? diap_DataValueMessageType {
            get {
                return GetOptionSetValue<dia_cbgfieldsettings_diap_DataValueMessageType>("diap_datavaluemessagetype");
            }
            set {
                SetOptionSetValue("diap_datavaluemessagetype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Data Value Show Message If Field Value Is</para>
        /// </summary>
        [AttributeLogicalName("diap_datavalueshowmessageiffieldvalueis")]
        public string diap_DataValueShowMessageIfFieldValueIs {
            get {
                return GetAttributeValue<string>("diap_datavalueshowmessageiffieldvalueis");
            }
            set {
                SetAttributeValue("diap_datavalueshowmessageiffieldvalueis", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Data Value Validation Message</para>
        /// </summary>
        [AttributeLogicalName("diap_datavaluevalidationmessage")]
        public string diap_DataValueValidationMessage {
            get {
                return GetAttributeValue<string>("diap_datavaluevalidationmessage");
            }
            set {
                SetAttributeValue("diap_datavaluevalidationmessage", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Help Text Heading</para>
        /// </summary>
        [AttributeLogicalName("diap_helptextheading")]
        public string diap_HelpTextHeading {
            get {
                return GetAttributeValue<string>("diap_helptextheading");
            }
            set {
                SetAttributeValue("diap_helptextheading", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Section Css Class</para>
        /// </summary>
        [AttributeLogicalName("diap_sectioncssclass")]
        public string diap_SectionCssClass {
            get {
                return GetAttributeValue<string>("diap_sectioncssclass");
            }
            set {
                SetAttributeValue("diap_sectioncssclass", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Section Intro</para>
        /// </summary>
        [AttributeLogicalName("diap_sectionintro")]
        public string diap_SectionIntro {
            get {
                return GetAttributeValue<string>("diap_sectionintro");
            }
            set {
                SetAttributeValue("diap_sectionintro", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Settings Type</para>
        /// </summary>
        [AttributeLogicalName("diap_settingstype")]
        public dia_cbgfieldsettings_diap_SettingsType? diap_SettingsType {
            get {
                return GetOptionSetValue<dia_cbgfieldsettings_diap_SettingsType>("diap_settingstype");
            }
            set {
                SetOptionSetValue("diap_settingstype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Supporting Field Content</para>
        /// </summary>
        [AttributeLogicalName("diap_supportingfieldcontent")]
        public string diap_SupportingFieldContent {
            get {
                return GetAttributeValue<string>("diap_supportingfieldcontent");
            }
            set {
                SetAttributeValue("diap_supportingfieldcontent", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Supporting Label Content</para>
        /// </summary>
        [AttributeLogicalName("diap_supportinglabelcontent")]
        public string diap_SupportingLabelContent {
            get {
                return GetAttributeValue<string>("diap_supportinglabelcontent");
            }
            set {
                SetAttributeValue("diap_supportinglabelcontent", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the CBG Field Settings</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dia_cbgfieldsettingsState? statecode {
            get {
                return GetOptionSetValue<dia_cbgfieldsettingsState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the CBG Field Settings</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dia_cbgfieldsettings_statuscode? statuscode {
            get {
                return GetOptionSetValue<dia_cbgfieldsettings_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("diap_AccordionContent")]
        public IEnumerable<diap_cbgaccordioncontent> diap_AccordionContent {
            get {
                return GetRelatedEntities<diap_cbgaccordioncontent>("diap_AccordionContent", null);
            }
            set {
                SetRelatedEntities("diap_AccordionContent", null, value);
            }
        }
        
        public static dia_cbgfieldsettings Retrieve(IOrganizationService service, Guid id, params Expression<Func<dia_cbgfieldsettings,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [DataContract()]
    public enum dia_cbgfieldsettingsState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dia_cbgfieldsettings_diap_DataValueMessageType {
        
        [EnumMember()]
        None = 504120000,
        
        [EnumMember()]
        Information = 504120001,
        
        [EnumMember()]
        Error = 504120002,
    }
    
    [DataContract()]
    public enum dia_cbgfieldsettings_diap_DataValueConditionType {
        
        [EnumMember()]
        SpecificValue = 504120000,
        
        [EnumMember()]
        AnyItemSelected = 504120001,
    }
    
    [DataContract()]
    public enum dia_cbgfieldsettings_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum dia_cbgfieldsettings_diap_SettingsType {
        
        [EnumMember()]
        Field = 504120000,
        
        [EnumMember()]
        Section = 504120001,
    }
}
