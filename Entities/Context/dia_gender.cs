//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace Entities {
    
    
    /// <summary>
    /// <para>Display Name: Gender</para>
    /// </summary>
    [EntityLogicalName("dia_gender")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dia_gender : ExtendedEntity<dia_genderState, dia_gender_statuscode> {
        
        public const string EntityLogicalName = "dia_gender";
        
        public const int EntityTypeCode = 10342;
        
        public dia_gender() : 
                base(EntityLogicalName) {
        }
        
        public dia_gender(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dia_name");
            }
        }
        
        [AttributeLogicalName("dia_genderid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dia_genderid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Gender</para>
        /// </summary>
        [AttributeLogicalName("dia_genderid")]
        public Guid? dia_genderId {
            get {
                return GetAttributeValue<Guid?>("dia_genderid");
            }
            set {
                SetId("dia_genderid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Comments</para>
        /// </summary>
        [AttributeLogicalName("dia_comments")]
        public string dia_comments {
            get {
                return GetAttributeValue<string>("dia_comments");
            }
            set {
                SetAttributeValue("dia_comments", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: COS code for migration</para>
        /// </summary>
        [AttributeLogicalName("dia_coscodeformigration")]
        public string dia_coscodeformigration {
            get {
                return GetAttributeValue<string>("dia_coscodeformigration");
            }
            set {
                SetAttributeValue("dia_coscodeformigration", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DAL Code</para>
        /// </summary>
        [AttributeLogicalName("dia_dalcode")]
        public string dia_dalcode {
            get {
                return GetAttributeValue<string>("dia_dalcode");
            }
            set {
                SetAttributeValue("dia_dalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DCS Code for migration</para>
        /// </summary>
        [AttributeLogicalName("dia_dcscodeformigration")]
        public string dia_dcscodeformigration {
            get {
                return GetAttributeValue<string>("dia_dcscodeformigration");
            }
            set {
                SetAttributeValue("dia_dcscodeformigration", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("dia_description")]
        public string dia_description {
            get {
                return GetAttributeValue<string>("dia_description");
            }
            set {
                SetAttributeValue("dia_description", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: End date</para>
        /// </summary>
        [AttributeLogicalName("dia_enddate")]
        public DateTime? dia_enddate {
            get {
                return GetAttributeValue<DateTime?>("dia_enddate");
            }
            set {
                SetAttributeValue("dia_enddate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Gender code</para>
        /// </summary>
        [AttributeLogicalName("dia_gendercode")]
        public string dia_gendercode {
            get {
                return GetAttributeValue<string>("dia_gendercode");
            }
            set {
                SetAttributeValue("dia_gendercode", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Gender identity marker</para>
        /// </summary>
        [AttributeLogicalName("dia_genderidentitymarker")]
        public string dia_genderidentitymarker {
            get {
                return GetAttributeValue<string>("dia_genderidentitymarker");
            }
            set {
                SetAttributeValue("dia_genderidentitymarker", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Gender</para>
        /// </summary>
        [AttributeLogicalName("dia_name")]
        public string dia_name {
            get {
                return GetAttributeValue<string>("dia_name");
            }
            set {
                SetAttributeValue("dia_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start date</para>
        /// </summary>
        [AttributeLogicalName("dia_startdate")]
        public DateTime? dia_startdate {
            get {
                return GetAttributeValue<DateTime?>("dia_startdate");
            }
            set {
                SetAttributeValue("dia_startdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Travel document code</para>
        /// </summary>
        [AttributeLogicalName("dia_traveldocumentcode")]
        public string dia_traveldocumentcode {
            get {
                return GetAttributeValue<string>("dia_traveldocumentcode");
            }
            set {
                SetAttributeValue("dia_traveldocumentcode", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Visible on portal</para>
        /// </summary>
        [AttributeLogicalName("dia_visibleonportal")]
        public bool? dia_visibleonportal {
            get {
                return GetAttributeValue<bool?>("dia_visibleonportal");
            }
            set {
                SetAttributeValue("dia_visibleonportal", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Gender</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dia_genderState? statecode {
            get {
                return GetOptionSetValue<dia_genderState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Gender</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dia_gender_statuscode? statuscode {
            get {
                return GetOptionSetValue<dia_gender_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dia_gender")]
        public BusinessUnit business_unit_dia_gender {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dia_gender", null);
            }
            set {
                SetRelatedEntity("business_unit_dia_gender", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_gender_cbgapplication_genderid")]
        public IEnumerable<dia_cbgapplication> dia_gender_cbgapplication_genderid {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_gender_cbgapplication_genderid", null);
            }
            set {
                SetRelatedEntities("dia_gender_cbgapplication_genderid", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_gender_contact_genderid")]
        public IEnumerable<Contact> dia_gender_contact_genderid {
            get {
                return GetRelatedEntities<Contact>("dia_gender_contact_genderid", null);
            }
            set {
                SetRelatedEntities("dia_gender_contact_genderid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dia_gender_createdby")]
        public SystemUser lk_dia_gender_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_gender_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dia_gender_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dia_gender_createdonbehalfby")]
        public SystemUser lk_dia_gender_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_gender_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dia_gender_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dia_gender_modifiedby")]
        public SystemUser lk_dia_gender_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_gender_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dia_gender_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dia_gender_modifiedonbehalfby")]
        public SystemUser lk_dia_gender_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_gender_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dia_gender_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dia_gender")]
        public Team team_dia_gender {
            get {
                return GetRelatedEntity<Team>("team_dia_gender", null);
            }
            set {
                SetRelatedEntity("team_dia_gender", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dia_gender")]
        public SystemUser user_dia_gender {
            get {
                return GetRelatedEntity<SystemUser>("user_dia_gender", null);
            }
            set {
                SetRelatedEntity("user_dia_gender", null, value);
            }
        }
        
        public static dia_gender Retrieve(IOrganizationService service, Guid id, params Expression<Func<dia_gender,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [DataContract()]
    public enum dia_genderState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dia_gender_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
}
