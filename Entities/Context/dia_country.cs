//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace Entities {
    
    
    /// <summary>
    /// <para>Display Name: Country</para>
    /// </summary>
    [EntityLogicalName("dia_country")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class dia_country : ExtendedEntity<dia_countryState, dia_country_statuscode> {
        
        public const string EntityLogicalName = "dia_country";
        
        public const int EntityTypeCode = 10331;
        
        public dia_country() : 
                base(EntityLogicalName) {
        }
        
        public dia_country(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("dia_name");
            }
        }
        
        [AttributeLogicalName("dia_countryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("dia_countryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Country</para>
        /// </summary>
        [AttributeLogicalName("dia_countryid")]
        public Guid? dia_countryId {
            get {
                return GetAttributeValue<Guid?>("dia_countryid");
            }
            set {
                SetId("dia_countryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Printable name</para>
        /// </summary>
        [AttributeLogicalName("dia_alternatename1")]
        public string dia_alternatename1 {
            get {
                return GetAttributeValue<string>("dia_alternatename1");
            }
            set {
                SetAttributeValue("dia_alternatename1", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Alternate name 2</para>
        /// </summary>
        [AttributeLogicalName("dia_alternatename2")]
        public string dia_alternatename2 {
            get {
                return GetAttributeValue<string>("dia_alternatename2");
            }
            set {
                SetAttributeValue("dia_alternatename2", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Alternate name 3</para>
        /// </summary>
        [AttributeLogicalName("dia_alternatename3")]
        public string dia_alternatename3 {
            get {
                return GetAttributeValue<string>("dia_alternatename3");
            }
            set {
                SetAttributeValue("dia_alternatename3", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Alternate name 4</para>
        /// </summary>
        [AttributeLogicalName("dia_alternatename4")]
        public string dia_alternatename4 {
            get {
                return GetAttributeValue<string>("dia_alternatename4");
            }
            set {
                SetAttributeValue("dia_alternatename4", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Civil union country</para>
        /// </summary>
        [AttributeLogicalName("dia_civilunioncountry")]
        public dia_yesno? dia_civilunioncountry {
            get {
                return GetOptionSetValue<dia_yesno>("dia_civilunioncountry");
            }
            set {
                SetOptionSetValue("dia_civilunioncountry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Commonwealth country</para>
        /// </summary>
        [AttributeLogicalName("dia_commonwealthcountry")]
        public dia_yesno? dia_commonwealthcountry {
            get {
                return GetOptionSetValue<dia_yesno>("dia_commonwealthcountry");
            }
            set {
                SetOptionSetValue("dia_commonwealthcountry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: COS code(s)</para>
        /// </summary>
        [AttributeLogicalName("dia_coscodes")]
        public string dia_coscodes {
            get {
                return GetAttributeValue<string>("dia_coscodes");
            }
            set {
                SetAttributeValue("dia_coscodes", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country valid for delivery address</para>
        /// </summary>
        [AttributeLogicalName("dia_countryvalidfordeliveryaddress")]
        public dia_yesno? dia_countryvalidfordeliveryaddress {
            get {
                return GetOptionSetValue<dia_yesno>("dia_countryvalidfordeliveryaddress");
            }
            set {
                SetOptionSetValue("dia_countryvalidfordeliveryaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country valid for birth</para>
        /// </summary>
        [AttributeLogicalName("dia_currentbirthcountry")]
        public dia_yesno? dia_currentbirthcountry {
            get {
                return GetOptionSetValue<dia_yesno>("dia_currentbirthcountry");
            }
            set {
                SetOptionSetValue("dia_currentbirthcountry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country valid for citizenship</para>
        /// </summary>
        [AttributeLogicalName("dia_currentcitizenshipcountry")]
        public dia_yesno? dia_currentcitizenshipcountry {
            get {
                return GetOptionSetValue<dia_yesno>("dia_currentcitizenshipcountry");
            }
            set {
                SetOptionSetValue("dia_currentcitizenshipcountry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Country valid for passport</para>
        /// </summary>
        [AttributeLogicalName("dia_currentpassportcountry")]
        public dia_yesno? dia_currentpassportcountry {
            get {
                return GetOptionSetValue<dia_yesno>("dia_currentpassportcountry");
            }
            set {
                SetOptionSetValue("dia_currentpassportcountry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DAL code</para>
        /// </summary>
        [AttributeLogicalName("dia_dalcode")]
        public string dia_dalcode {
            get {
                return GetAttributeValue<string>("dia_dalcode");
            }
            set {
                SetAttributeValue("dia_dalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: DCS code(s)</para>
        /// </summary>
        [AttributeLogicalName("dia_dcscodes")]
        public string dia_dcscodes {
            get {
                return GetAttributeValue<string>("dia_dcscodes");
            }
            set {
                SetAttributeValue("dia_dcscodes", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: English is an official language</para>
        /// </summary>
        [AttributeLogicalName("dia_englishisanofficiallanguage")]
        public dia_yesno? dia_englishisanofficiallanguage {
            get {
                return GetOptionSetValue<dia_yesno>("dia_englishisanofficiallanguage");
            }
            set {
                SetOptionSetValue("dia_englishisanofficiallanguage", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Historic names</para>
        /// </summary>
        [AttributeLogicalName("dia_historicnames")]
        public string dia_historicnames {
            get {
                return GetAttributeValue<string>("dia_historicnames");
            }
            set {
                SetAttributeValue("dia_historicnames", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ICAO country code</para>
        /// </summary>
        [AttributeLogicalName("dia_icaocountrycode")]
        public string dia_icaocountrycode {
            get {
                return GetAttributeValue<string>("dia_icaocountrycode");
            }
            set {
                SetAttributeValue("dia_icaocountrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ISO code</para>
        /// </summary>
        [AttributeLogicalName("dia_isocode")]
        public string dia_isocode {
            get {
                return GetAttributeValue<string>("dia_isocode");
            }
            set {
                SetAttributeValue("dia_isocode", value);
            }
        }
        
        /// <summary>
        /// <para>The name of the custom entity.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("dia_name")]
        public string dia_name {
            get {
                return GetAttributeValue<string>("dia_name");
            }
            set {
                SetAttributeValue("dia_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Passports short name</para>
        /// </summary>
        [AttributeLogicalName("dia_passportsshortname")]
        public string dia_passportsshortname {
            get {
                return GetAttributeValue<string>("dia_passportsshortname");
            }
            set {
                SetAttributeValue("dia_passportsshortname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Today known as</para>
        /// </summary>
        [AttributeLogicalName("dia_todayknownas")]
        public string dia_todayknownas {
            get {
                return GetAttributeValue<string>("dia_todayknownas");
            }
            set {
                SetAttributeValue("dia_todayknownas", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: UN country</para>
        /// </summary>
        [AttributeLogicalName("dia_uncountry")]
        public dia_yesno? dia_uncountry {
            get {
                return GetOptionSetValue<dia_yesno>("dia_uncountry");
            }
            set {
                SetOptionSetValue("dia_uncountry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Valid from date</para>
        /// </summary>
        [AttributeLogicalName("dia_validfromdate")]
        public DateTime? dia_validfromdate {
            get {
                return GetAttributeValue<DateTime?>("dia_validfromdate");
            }
            set {
                SetAttributeValue("dia_validfromdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Valid to date</para>
        /// </summary>
        [AttributeLogicalName("dia_validtodate")]
        public DateTime? dia_validtodate {
            get {
                return GetAttributeValue<DateTime?>("dia_validtodate");
            }
            set {
                SetAttributeValue("dia_validtodate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Visible on portal</para>
        /// </summary>
        [AttributeLogicalName("dia_visibleonportal")]
        public bool? dia_visibleonportal {
            get {
                return GetAttributeValue<bool?>("dia_visibleonportal");
            }
            set {
                SetAttributeValue("dia_visibleonportal", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Country</para>
        /// <para>Display Name: State</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        public dia_countryState? statecode {
            get {
                return GetOptionSetValue<dia_countryState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Country</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        public dia_country_statuscode? statuscode {
            get {
                return GetOptionSetValue<dia_country_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_dia_country")]
        public BusinessUnit business_unit_dia_country {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_dia_country", null);
            }
            set {
                SetRelatedEntity("business_unit_dia_country", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_cbgapplication_country_currentcitizenship")]
        public IEnumerable<dia_cbgapplication> dia_cbgapplication_country_currentcitizenship {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_cbgapplication_country_currentcitizenship", null);
            }
            set {
                SetRelatedEntities("dia_cbgapplication_country_currentcitizenship", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_cbgapplication_country_previouscitiz")]
        public IEnumerable<dia_cbgapplication> dia_cbgapplication_country_previouscitiz {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_cbgapplication_country_previouscitiz", null);
            }
            set {
                SetRelatedEntities("dia_cbgapplication_country_previouscitiz", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_cbgapplication_agentcountryid")]
        public IEnumerable<dia_cbgapplication> dia_country_cbgapplication_agentcountryid {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_country_cbgapplication_agentcountryid", null);
            }
            set {
                SetRelatedEntities("dia_country_cbgapplication_agentcountryid", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_cbgapplication_countryofbirth")]
        public IEnumerable<dia_cbgapplication> dia_country_cbgapplication_countryofbirth {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_country_cbgapplication_countryofbirth", null);
            }
            set {
                SetRelatedEntities("dia_country_cbgapplication_countryofbirth", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_cbgapplication_countryofissueid")]
        public IEnumerable<dia_cbgapplication> dia_country_cbgapplication_countryofissueid {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_country_cbgapplication_countryofissueid", null);
            }
            set {
                SetRelatedEntities("dia_country_cbgapplication_countryofissueid", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_cbgapplication_parent1")]
        public IEnumerable<dia_cbgapplication> dia_country_cbgapplication_parent1 {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_country_cbgapplication_parent1", null);
            }
            set {
                SetRelatedEntities("dia_country_cbgapplication_parent1", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_cbgapplication_parent2")]
        public IEnumerable<dia_cbgapplication> dia_country_cbgapplication_parent2 {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_country_cbgapplication_parent2", null);
            }
            set {
                SetRelatedEntities("dia_country_cbgapplication_parent2", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_cbgapplication_personassistingcountry")]
        public IEnumerable<dia_cbgapplication> dia_country_cbgapplication_personassistingcountry {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_country_cbgapplication_personassistingcountry", null);
            }
            set {
                SetRelatedEntities("dia_country_cbgapplication_personassistingcountry", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_cbgapplication_primarynationality")]
        public IEnumerable<dia_cbgapplication> dia_country_cbgapplication_primarynationality {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_country_cbgapplication_primarynationality", null);
            }
            set {
                SetRelatedEntities("dia_country_cbgapplication_primarynationality", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_cbgapplication_refereecountryid")]
        public IEnumerable<dia_cbgapplication> dia_country_cbgapplication_refereecountryid {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_country_cbgapplication_refereecountryid", null);
            }
            set {
                SetRelatedEntities("dia_country_cbgapplication_refereecountryid", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_country_contact_countryofbirthid")]
        public IEnumerable<Contact> dia_country_contact_countryofbirthid {
            get {
                return GetRelatedEntities<Contact>("dia_country_contact_countryofbirthid", null);
            }
            set {
                SetRelatedEntities("dia_country_contact_countryofbirthid", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_dia_country_dia_cbgapplication_physicalcountryid")]
        public IEnumerable<dia_cbgapplication> dia_dia_country_dia_cbgapplication_physicalcountryid {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_dia_country_dia_cbgapplication_physicalcountryid", null);
            }
            set {
                SetRelatedEntities("dia_dia_country_dia_cbgapplication_physicalcountryid", null, value);
            }
        }
        
        [RelationshipSchemaName("dia_dia_country_dia_cbgapplication_postalcountryid")]
        public IEnumerable<dia_cbgapplication> dia_dia_country_dia_cbgapplication_postalcountryid {
            get {
                return GetRelatedEntities<dia_cbgapplication>("dia_dia_country_dia_cbgapplication_postalcountryid", null);
            }
            set {
                SetRelatedEntities("dia_dia_country_dia_cbgapplication_postalcountryid", null, value);
            }
        }
        
        [RelationshipSchemaName("diap_dia_country_diap_portalcountry_countryid")]
        public IEnumerable<diap_portalcountry> diap_dia_country_diap_portalcountry_countryid {
            get {
                return GetRelatedEntities<diap_portalcountry>("diap_dia_country_diap_portalcountry_countryid", null);
            }
            set {
                SetRelatedEntities("diap_dia_country_diap_portalcountry_countryid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_dia_country_createdby")]
        public SystemUser lk_dia_country_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_country_createdby", null);
            }
            set {
                SetRelatedEntity("lk_dia_country_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_dia_country_createdonbehalfby")]
        public SystemUser lk_dia_country_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_country_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dia_country_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_dia_country_modifiedby")]
        public SystemUser lk_dia_country_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_country_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_dia_country_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_dia_country_modifiedonbehalfby")]
        public SystemUser lk_dia_country_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_dia_country_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_dia_country_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_dia_country")]
        public Team team_dia_country {
            get {
                return GetRelatedEntity<Team>("team_dia_country", null);
            }
            set {
                SetRelatedEntity("team_dia_country", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_dia_country")]
        public SystemUser user_dia_country {
            get {
                return GetRelatedEntity<SystemUser>("user_dia_country", null);
            }
            set {
                SetRelatedEntity("user_dia_country", null, value);
            }
        }
        
        public static dia_country Retrieve(IOrganizationService service, Guid id, params Expression<Func<dia_country,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [DataContract()]
    public enum dia_countryState {
        
        [EnumMember()]
        Active = 0,
        
        [EnumMember()]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum dia_country_statuscode {
        
        [EnumMember()]
        Active = 1,
        
        [EnumMember()]
        Inactive = 2,
    }
}
